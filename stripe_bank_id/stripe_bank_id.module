<?php

function stripe_bank_id_menu() {
    $items = array();

    $items['stripe-api-test'] = array( 
        'title' => 'Enter Recipient ID', //page title
        'description' => 'Fill out the below information to add a bank account to your GladlyDo account.',
        'page callback' => 'drupal_get_form', //this is the function that will be called when the page is accessed.  for a form, use drupal_get_form
        'page arguments' => array('stripe_api_test_form'), //put the name of the form here
        'access callback' => TRUE
    );

    return $items;
}

function stripe_api_test_form($form, &$form_state) {
    
    // Provide a default date in the format YYYY-MM-DD HH:MM:SS.
    $date = '2008-12-31 00:00:00';
    $format = 'm-d-Y';
    $format2 = 'm-d-Y G:i';
    $form['date'] = array(
     '#type' => 'date_select', // types 'date_text' and 'date_timezone' are also supported. See .inc file.
     '#title' => t('select a date'),
     '#default_value' => $date, 
     '#date_format' => $format,
     '#date_label_position' => 'within', // See other available attributes and what they do in date_api_elements.inc
     '#date_year_range' => '-80:+0', // Optional, used to set the year range (back 3 years and forward 3 years is the default).
    );
    
    $form['date2'] = array(
     '#type' => 'date_select', // types 'date_text' and 'date_timezone' are also supported. See .inc file.
     '#title' => t('select a date'),
     '#default_value' => 'now', 
     '#date_format' => $format2,
     '#date_label_position' => 'within', // See other available attributes and what they do in date_api_elements.inc
     '#date_year_range' => '-0:+0', // Optional, used to set the year range (back 3 years and forward 3 years is the default).
        '#access' => FALSE,
    );

    $form['rid'] = array(
        '#type' => 'textfield', 
        '#title' => 'Recipient ID',
        '#size' => 60,
        '#required' => FALSE,  
    );
    
    $form['uid'] = array(
        '#type' => 'textfield', 
        '#title' => 'UID',
        '#size' => 60,
        '#required' => FALSE,  
    );
    
    $form['submit_button'] = array(
        '#type' => 'submit',
        '#value' => t('Click Here!'),
    );
    
    return $form;
}

function stripe_api_test_form_validate($form, &$form_state) {
    global $user;
    dpm($form_state);
    dpm($user);
    
    $bday = $form_state['values']['date'];
    $pieces = explode("-", $bday);
    $bday_year = $pieces[0];
    $bday_month = $pieces[1];
    $bday_day = $pieces[2];
    
        



    
    $tos_time = strtotime($form_state['values']['date2']);
    $tos_ip= ip_address();
    
    
    /*global $user;
    $uid = $form_state['values']['uid'];
    
    $profile = profile2_load_by_user($uid, 'i_want_to_be_a_doer');
    $wrapper = entity_metadata_wrapper('profile2', $profile);
    if(!empty($wrapper->field_recipient_id->value())) {
        $rid = $wrapper->field_recipient_id->value();
    }
    else{$rid = 'no id';}
    dpm($rid);
    */
    
    
    
    require_once 'Stripe/init.php';
    \Stripe\Stripe::setApiKey("sk_live_5qJ6lfFPJn7TFuYzjv7U0qDx");
    $accts = \Stripe\Account::all(array("limit" => 30));
    foreach($accts->data as $item) {
        $account = \Stripe\Account::retrieve($item->id);
        $account->delete();
    }
    
    
    $bank_accounts = \Stripe\Account::retrieve('acct_17fO42ERgtyabMMQ')->external_accounts->all(array('limit'=>3, 'object' => 'bank_account'));
    foreach($bank_accounts->data as $item){
        dpm($item);
        dpm($item->id);
        dpm($item->account);
    }
    

    
    
}

function stripe_api_test_form_submit($form, &$form_state) {
}



